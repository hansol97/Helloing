<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper 
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="adminMapper">

	<resultMap id="chatbotResultSet" type="chatbot">
		<result column="CHATBOT_Q" property="chatbotQ"/>
		<result column="CHATBOT_A" property="chatbotA"/>
	</resultMap>
	
	<resultMap id="memberResultSet" type="member">
		<result column="MEM_NO"			property="memNo" />
		<result column="MEM_ID" 		property="memId" />
		<result column="MEM_PWD" 		property="memPwd" />
		<result column="MEM_NAME" 		property="memName" />
		<result column="EMAIL" 			property="email" />
		<result column="PHONE" 			property="phone" />
		<result column="STATUS" 		property="status" />
		<result column="MEM_ENROLLDATE" property="memEnrollDate" />
		<result column="REPORT_COUNT" 	property="reportCount" />
	</resultMap>
	
	<resultMap id="businessResultSet" type="business">
	  	<result column="BUSINESS_NO" 			property="businessNo" />
	  	<result column="MEM_NO" 				property="memNo" />
	  	<result column="BUSINESS_NAME" 			property="businessName" />
	  	<result column="ADDRESS" 				property="address" />
	  	<result column="BUSINESS_ENROLLDATE" 	property="businessEnrollDate" />
	</resultMap>
	
	<resultMap id="businessPayResultSet" type="businessPayment">
		<result column="PAYMENT_NO" property="paymentNo" />
		<result column="BUSINESS_NAME" property="businessNo" />
		<result column="PAYMENT_AMOUNT" property="paymentAmount" />
		<result column="ACCOMM_NAME" property="accommName" />
		<result column="ACTIVITY_NAME" property="activityName" />
		<result column="ACT_END_DATE" property="actEndDate" />
		<result column="ACC_END_DATE" property="accEndDate" />
	</resultMap>
	
	 <resultMap id="roomPaymentResultSet" type="roomPayment">
	  	<result column="ORDER_NO" property="orderNo"/>
	  	<result column="MEM_ID" property="memId"/>
	  	<result column="START_DATE" property="startDate"/>
	  	<result column="END_DATE" property="endDate"/>
	  	<result column="HEAD_COUNT" property="headCount"/>
	  	<result column="PRICE" property="price"/>
	  	<result column="ACCOMM_NAME" property="accName"/>
	  	<result column="ROOM_NAME" property="roomName"/>
	  	<result column="MEM_NAME" property="memName"/>
	  	<result column="CATEGORY" property="category"/>
	  	<result column="STATUS" property="status"/>
  		<result column="PAYMENT_DATE" property="paymentDate"/>
	  </resultMap>
	  
	  <resultMap id="tickeyPaymentResultSet" type="ticketPayment">
	  	<result column="ORDER_NO" property="orderNo"/>
	  	<result column="MEM_ID" property="memId"/>
	  	<result column="ACTIVITY_NAME" property="activityName"/>
	  	<result column="PAYMENT_AMOUNT" property="paymentAmount"/>
	  	<result column="PAYMENT_DATE" property="paymentDate"/>
	  	<result column="BUSINESS_NAME" property="businessName"/>
	  </resultMap>
		
	 <resultMap id="ticketPaymentResultSet" type="ticket">
	 	<result column="TICKET_NO" property="ticketNo"/>
	 	<result column="TICKET_NAME" property="ticketName"/>
	 	<result column="START_DATE" property="startDate"/>
	 	<result column="END_DATE" property="endDate"/>
	 	<result column="PRICE" property="price"/>
	 	<result column="COUNT" property="count"/>
	 </resultMap>
	<!-- 챗봇Q 중복 확인 -->
	<select id="selectChatbotQ" parameterType="chatbot" resultType="_int">
		SELECT 
		       COUNT(*)
		  FROM 
		       CHATBOT
		 WHERE
		       CHATBOT_Q = #{chatbotQ}		
	</select>
	
	<!-- 챗봇 등록 -->
	<insert id="insertChatbot" parameterType="chatbot">
		INSERT
		  INTO
		       CHATBOT
		VALUES
		       (
		       #{chatbotQ}
		       ,#{chatbotA}
		       )
	</insert>
	
	<!-- 챗봇 목록 수 조회 -->
	<select id="selecChatbottListCount" resultType="_int">
		SELECT 
		       COUNT(*)
		  FROM 
		       CHATBOT
	</select>
	
	<!-- 챗봇 전체 조회 -->
	<select id="selectChatbotList" resultMap="chatbotResultSet">
		SELECT
		       CHATBOT_Q
		       ,CHATBOT_A
		  FROM
		       CHATBOT
	</select>
	
	<!-- 챗봇 수정시 챗봇Q 중복 조회 -->
	<select id="selectChatbotQUpdate" parameterType="chatbot" resultType="_int">
		SELECT
			   COUNT(*)
		  FROM
		       CHATBOT
		 WHERE
		       CHATBOT_Q = #{chatbotQ}
		   AND
		       NOT CHATBOT_Q = #{originChatbotQ}
	</select>
	
	<!-- 챗봇 수정 -->
	<update id="updateChatbot" parameterType="chatbot" >
		UPDATE
		       CHATBOT
		   SET
		       CHATBOT_Q = #{chatbotQ}
		       ,CHATBOT_A = #{chatbotA}
		 WHERE
		       CHATBOT_Q = #{originChatbotQ}
	</update>
	
	<!-- 챗봇 삭제 -->
	<delete id="deleteChatbot" parameterType="string">
		DELETE	
		  FROM 
		       CHATBOT
		 WHERE
		       CHATBOT_Q = #{chatbotQ}
	</delete>
	
	<!-- 챗봇 검색된 목록 수 조회 -->
	<select id="selectSearchChatbotCount" parameterType="hashMap" resultType="_int">
		SELECT 
			   COUNT(*)
		  FROM 
		       CHATBOT
		 WHERE
		 	<if test="condition == 'chatbotName'">
		    	CHATBOT_Q
		 	</if>
		 	<if test="condition == 'chatbotContent'">
		 		CHATBOT_A 
		 	</if>
		 		LIKE '%' || #{keyword} || '%'
	</select>
	
	<!-- 챗봇 검색 목록 조회 -->
	<select id="searchChatbot" parameterType="hashMap" resultMap="chatbotResultSet">
		SELECT
			   CHATBOT_Q
			   ,CHATBOT_A
	 	  FROM
	 	       CHATBOT
	 	 WHERE
		 	<if test="condition == 'chatbotName'">
		    	CHATBOT_Q
		 	</if>
		 	<if test="condition == 'chatbotContent'">
		 		CHATBOT_A 
		 	</if>
		 		LIKE '%' || #{keyword} || '%'
	</select>
	
	<!-- 챗봇A 조회 -->
	<select id="selectChatbotA" parameterType="hashMap" resultMap="chatbotResultSet">
		SELECT 
		 	   CHATBOT_Q
			   ,CHATBOT_A
	 	  FROM
	 	       CHATBOT
	 	 WHERE 
	 	 <choose>
	 	 	<when test='List[0].contains("[admin]")'>
	 	 		CHATBOT_Q LIKE '%' || #{List[0]} || '%'
	 	 	</when>
	 	 	<otherwise>
	 	 		<foreach collection="List" item="item" open="(" separator="AND" close=")">
		 	       CHATBOT_Q LIKE '%' || #{item} || '%'
			 	 </foreach>
			  AND
			       CHATBOT_Q NOT LIKE '[admin]%'
	 	 	</otherwise>
	 	 </choose>
	</select>
	
	<!-- 일반회원 목록 수 -->
	<select id="selectMemListCount" resultType="_int">
		SELECT
		       COUNT(*)
		  FROM
		       MEMBER
	</select>
	
	<!-- 일반회원 목록 조회 -->
	<select id="selectMemberList" resultMap="memberResultSet">
		SELECT
		       MEM_NO
		       ,MEM_ID
		       ,MEM_NAME
		       ,EMAIL
		       ,PHONE
		       ,STATUS
		       ,TO_CHAR(MEM_ENROLLDATE, 'YYYY-MM-DD') MEM_ENROLLDATE
		  FROM
		       MEMBER
		 ORDER
		    BY
		       (CASE WHEN STATUS='A' THEN 1 ELSE 2 END), MEM_ENROLLDATE DESC
	</select>
	
	<!-- 일반회원 정지 -->
	<update id="deleteMember" parameterType="_int">
		UPDATE
		       MEMBER
		   SET
		       STATUS = 'S'
		 WHERE
		       STATUS != 'N'
		   AND
		       MEM_NO = #{memNo}
	</update>
	
	<!-- 일반회원 검색된 목록 수 -->
	<select id="selectSearchMemListCount" parameterType="hashMap" resultType="_int">
		SELECT
		       COUNT(*)
		  FROM
		       MEMBER
		 WHERE
		 <if test="condition == 'searchId'">
		 	   MEM_ID LIKE '%' || #{keyword} || '%'
		 </if>
		 <if test="condition == 'searchName'">
		 	   MEM_NAME LIKE '%' || #{keyword} || '%'
		 </if>
	</select>
	
	<!-- 일반회원 검색 목록 -->
	<select id="searchMemList" parameterType="hashMap" resultMap="memberResultSet">
		SELECT
		       MEM_NO
		       ,MEM_ID
		       ,MEM_NAME
		       ,EMAIL
		       ,PHONE
		       ,STATUS
		       ,TO_CHAR(MEM_ENROLLDATE, 'YYYY-MM-DD') MEM_ENROLLDATE
		  FROM
		       MEMBER
		 WHERE
		 <if test="condition == 'searchId'">
		 	   MEM_ID LIKE '%' || #{keyword} || '%'
		 </if>
		 <if test="condition == 'searchName'">
		 	   MEM_NAME LIKE '%' || #{keyword} || '%'
		 </if>
		 ORDER
		    BY
		       (CASE WHEN STATUS='A' THEN 1 ELSE 2 END), MEM_ENROLLDATE DESC   
	</select>
	<!-- 사업가 목록 수 -->
	<select id="selectBusiListCount" resultType="_int">
		SELECT 
		       COUNT(*)
		  FROM
		       BUSINESS
	</select>
	
	<!-- 사업가 목록 조회 -->
	<select id="selectBusinessList" resultMap="businessResultSet">
		SELECT
		       BUSINESS_NO
		       ,MEM_NO
		       ,BUSINESS_NAME
		       ,PHONE
		       ,TO_CHAR(BUSINESS_ENROLLDATE, 'YYYY-MM-DD') BUSINESS_ENROLLDATE
		       ,ADDRESS
		       ,EMAIL
		 FROM
		       BUSINESS B
		 JOIN
		       MEMBER USING(MEM_NO)
	</select>
	
	<!-- 사업가 검색된 목록 수 -->
	<select id="searchBusiListCount" parameterType="hashmap" resultType="_int">
		SELECT 
		       COUNT(*)
		  FROM
		       BUSINESS
		 WHERE
		 <if test="condition == 'memNo'">
		 	   MEM_NO '%' || #{keyword} || '%'
		 </if>
		 <if test="condition == 'businessName'">
		 	   BUSINESS_NAME LIKE'%' || #{keyword} || '%'
		 </if>
	</select>
	
	<!-- 사업가 검색된 목록 -->
	<select id="searchBusinessList" resultMap="businessResultSet">
		SELECT
		       BUSINESS_NO
		       ,MEM_NO
		       ,BUSINESS_NAME
		       ,PHONE
		       ,TO_CHAR(BUSINESS_ENROLLDATE, 'YYYY-MM-DD') BUSINESS_ENROLLDATE
		       ,ADDRESS
		       ,EMAIL
		 FROM
		       BUSINESS B
		 JOIN
		       MEMBER USING(MEM_NO)
		WHERE
		 <if test="condition == 'memNo'">
		 	   MEM_NO '%' || #{keyword} || '%'
		 </if>
		 <if test="condition == 'businessName'">
		 	   BUSINESS_NAME LIKE'%' || #{keyword} || '%'
		 </if>
	</select>
	
	<!-- 사업자 등록 결제 수 -->
	<select id="selectBusiPayListCount" resultType="_int">
		SELECT
		       COUNT(*)
		  FROM
		       BUSINESS_PAYMENT
	</select>
	
	<!-- 사업자 등록 결제 리스트 -->
	<select id="selectBusiPayList" resultMap="businessPayResultSet">
		SELECT
		       PAYMENT_NO
		       ,BUSINESS_NAME
		       ,PAYMENT_AMOUNT
		       ,ACCOMM_NAME
		       ,ACTIVITY_NAME
		       ,TO_CHAR(ACTIVITY.END_DATE,'YYYY-MM-DD') ACT_END_DATE
		       ,TO_CHAR(ACCOMM.END_DATE,'YYYY-MM-DD') ACC_END_DATE
		  FROM
		       BUSINESS_PAYMENT
		  JOIN 
		       BUSINESS 
		 USING 
		       (BUSINESS_NO)
		  LEFT
		  JOIN
		        ACTIVITY 
		 USING 
		        (ACTIVITY_NO)
		  LEFT
		  JOIN
		        ACCOMM 
		 USING
		        (ACCOMM_NO)		        
	</select>
	
	<!-- 사업자 등록 결제 검색 리스트 수 -->
	<select id="searchBusiPayListCount" resultType="_int">
		SELECT
		       COUNT(*)
		  FROM
		       BUSINESS_PAYMENT
		  JOIN
		       BUSINESS USING(BUSINESS_NO)
		 WHERE
		       BUSINESS_NAME LIKE '%' || #{keyword} || '%'
	</select>
	
	<!-- 사업자 등록 결제 검색 리스트 -->
	<select id="searchBusiPayList" parameterType="string" resultMap="businessPayResultSet">
		SELECT
		       PAYMENT_NO
		       ,BUSINESS_NAME
		       ,PAYMENT_AMOUNT
		       ,ACCOMM_NAME
		       ,ACTIVITY_NAME
		       ,TO_CHAR(ACTIVITY.END_DATE,'YYYY-MM-DD') ACT_END_DATE
		       ,TO_CHAR(ACCOMM.END_DATE,'YYYY-MM-DD') ACC_END_DATE
		  FROM
		       BUSINESS_PAYMENT
		  JOIN 
		       BUSINESS 
		 USING 
		       (BUSINESS_NO)
		  LEFT
		  JOIN
		        ACTIVITY 
		 USING 
		        (ACTIVITY_NO)
		  LEFT
		  JOIN
		        ACCOMM 
		 USING
		        (ACCOMM_NO)	
		 WHERE
		       BUSINESS_NAME LIKE '%' || #{keyword} || '%'
	</select>
	
	<!-- 숙소 결제 목록 수 조회 -->
	<select id="selectRoomPayListCount" resultType="_int">
		SELECT 
			   COUNT(*)
	      FROM
	           ROOM_PAYMENT
	</select>
	
	<!-- 숙소 결제 목록 조회 -->
	<select id="selectRoomPayList" resultMap="roomPaymentResultSet">
		SELECT
		       ORDER_NO
		       ,MEM_ID
		       ,TO_CHAR(START_DATE, 'YYYY.MM.DD') START_DATE
		       ,TO_CHAR(RP.END_DATE, 'YYYY.MM.DD') END_DATE
		       ,HEAD_COUNT
		       ,RP.PRICE
		       ,ACCOMM_NAME
		       ,ROOM_NAME
		       ,TO_CHAR(PAYMENT_DATE, 'YYYY.MM.DD') PAYMENT_DATE
		       ,RP.STATUS
		  FROM
		       ROOM_PAYMENT RP
		  JOIN
		       MEMBER USING(MEM_NO)
		  JOIN 
		       ACCOMM USING(ACCOMM_NO)
		  JOIN 
		       ROOM USING(ROOM_NO)
	</select>
	
	<!-- 숙소 결제 검색된 목록 수 -->
	<select id="searchRoomPayListCount" parameterType="string" resultType="_int">
		SELECT
			   COUNT(*)
		  FROM
		       ROOM_PAYMENT 
		  JOIN 
		  	   MEMBER USING(MEM_NO)
		 WHERE
		       MEM_ID LIKE '%' || #{keyword} || '%' 
	</select>
	
	<!-- 숙소 결제 검색된 목록 -->
	<select id="searchRoomPayList" parameterType="string" resultMap="roomPaymentResultSet">
		SELECT
		       ORDER_NO
		       ,MEM_ID
		       ,TO_CHAR(START_DATE, 'YYYY.MM.DD') START_DATE
		       ,TO_CHAR(RP.END_DATE, 'YYYY.MM.DD') END_DATE
		       ,HEAD_COUNT
		       ,RP.PRICE
		       ,ACCOMM_NAME
		       ,ROOM_NAME
		       ,TO_CHAR(PAYMENT_DATE, 'YYYY.MM.DD') PAYMENT_DATE
		       ,RP.STATUS
		  FROM
		       ROOM_PAYMENT RP
		  JOIN
		       MEMBER USING(MEM_NO)
		  JOIN 
		       ACCOMM USING(ACCOMM_NO)
		  JOIN 
		       ROOM USING(ROOM_NO)
		 WHERE
		       MEM_ID LIKE '%' || #{keyword} || '%' 
	</select>
	
	<!-- 액티비티 결제 리스트 수 -->
	<select id="selectActPayListCount" resultType="_int">
		SELECT
		       COUNT(*)
		  FROM
		       (SELECT
				       ORDER_NO
				  FROM
				       TICKET_PAYMENT
				 GROUP
				    BY
				       ORDER_NO)
	</select>
	
	<!-- 액티비티 결제 리스트 -->
	<select id="selectActPaymentList" resultMap="tickeyPaymentResultSet">
		SELECT 
		       DISTINCT(ORDER_NO)
		       ,MEM_ID
		       ,ACTIVITY_NAME
		       ,PAYMENT_AMOUNT
		       ,TO_CHAR(PAYMENT_DATE, 'YYYY.MM.DD') PAYMENT_DATE
               ,BUSINESS_NAME
		  FROM
		       TICKET_PAYMENT
		  JOIN 
		       MEMBER USING(MEM_NO)
		  JOIN
		       TICKET USING(TICKET_NO)
		  JOIN
		       ACTIVITY USING(ACTIVITY_NO)
          JOIN
               BUSINESS USING(BUSINESS_NO)
	</select>
	
	<!-- 액티비티 결제 티켓 목록 조회 -->
	<select id="selectTicketList" parameterType="_int" resultMap="ticketPaymentResultSet">
		SELECT 
		       TICKET_NO
		       ,TICKET_NAME
		       ,TO_CHAR(START_DATE, 'YYYY.MM.DD') START_DATE
		       ,TO_CHAR(END_DATE, 'YYYY.MM.DD') END_DATE
		       ,T.PRICE
		       ,COUNT
		  FROM
		       TICKET T
		  JOIN
		       TICKET_PAYMENT USING(TICKET_NO)
		 WHERE
		       TICKET_NO IN (SELECT 
		                           TICKET_NO
		                      FROM
		                           TICKET_PAYMENT
		                     WHERE
		                           ORDER_NO = #{orderNo}
		                    )
	</select>
	
</mapper>