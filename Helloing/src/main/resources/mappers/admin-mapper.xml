<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper 
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="adminMapper">

	<resultMap id="chatbotResultSet" type="chatbot">
		<result column="CHATBOT_Q" property="chatbotQ"/>
		<result column="CHATBOT_A" property="chatbotA"/>
	</resultMap>
	
	<resultMap id="memberResultSet" type="member">
		<result column="MEM_NO"			property="memNo" />
		<result column="MEM_ID" 		property="memId" />
		<result column="MEM_PWD" 		property="memPwd" />
		<result column="MEM_NAME" 		property="memName" />
		<result column="EMAIL" 			property="email" />
		<result column="PHONE" 			property="phone" />
		<result column="STATUS" 		property="status" />
		<result column="MEM_ENROLLDATE" property="memEnrollDate" />
		<result column="REPORT_COUNT" 	property="reportCount" />
	</resultMap>
	
	<!-- 챗봇Q 중복 확인 -->
	<select id="selectChatbotQ" parameterType="chatbot" resultType="_int">
		SELECT 
		       COUNT(*)
		  FROM 
		       CHATBOT
		 WHERE
		       CHATBOT_Q = #{chatbotQ}		
	</select>
	
	<!-- 챗봇 등록 -->
	<insert id="insertChatbot" parameterType="chatbot">
		INSERT
		  INTO
		       CHATBOT
		VALUES
		       (
		       #{chatbotQ}
		       ,#{chatbotA}
		       )
	</insert>
	
	<!-- 챗봇 목록 수 조회 -->
	<select id="selecChatbottListCount" resultType="_int">
		SELECT 
		       COUNT(*)
		  FROM 
		       CHATBOT
	</select>
	
	<!-- 챗봇 전체 조회 -->
	<select id="selectChatbotList" resultMap="chatbotResultSet">
		SELECT
		       CHATBOT_Q
		       ,CHATBOT_A
		  FROM
		       CHATBOT
	</select>
	
	<!-- 챗봇 수정시 챗봇Q 중복 조회 -->
	<select id="selectChatbotQUpdate" parameterType="chatbot" resultType="_int">
		SELECT
			   COUNT(*)
		  FROM
		       CHATBOT
		 WHERE
		       CHATBOT_Q = #{chatbotQ}
		   AND
		       NOT CHATBOT_Q = #{originChatbotQ}
	</select>
	
	<!-- 챗봇 수정 -->
	<update id="updateChatbot" parameterType="chatbot" >
		UPDATE
		       CHATBOT
		   SET
		       CHATBOT_Q = #{chatbotQ}
		       ,CHATBOT_A = #{chatbotA}
		 WHERE
		       CHATBOT_Q = #{originChatbotQ}
	</update>
	
	<!-- 챗봇 삭제 -->
	<delete id="deleteChatbot" parameterType="string">
		DELETE	
		  FROM 
		       CHATBOT
		 WHERE
		       CHATBOT_Q = #{chatbotQ}
	</delete>
	
	<!-- 챗봇 검색된 목록 수 조회 -->
	<select id="selectSearchChatbotCount" parameterType="hashMap" resultType="_int">
		SELECT 
			   COUNT(*)
		  FROM 
		       CHATBOT
		 WHERE
		 	<if test="condition == 'chatbotName'">
		    	CHATBOT_Q
		 	</if>
		 	<if test="condition == 'chatbotContent'">
		 		CHATBOT_A 
		 	</if>
		 		LIKE '%' || #{keyword} || '%'
	</select>
	
	<!-- 챗봇 검색 목록 조회 -->
	<select id="searchChatbot" parameterType="hashMap" resultMap="chatbotResultSet">
		SELECT
			   CHATBOT_Q
			   ,CHATBOT_A
	 	  FROM
	 	       CHATBOT
	 	 WHERE
		 	<if test="condition == 'chatbotName'">
		    	CHATBOT_Q
		 	</if>
		 	<if test="condition == 'chatbotContent'">
		 		CHATBOT_A 
		 	</if>
		 		LIKE '%' || #{keyword} || '%'
	</select>
	
	<!-- 챗봇A 조회 -->
	<select id="selectChatbotA" parameterType="hashMap" resultMap="chatbotResultSet">
		SELECT 
		 	   CHATBOT_Q
			   ,CHATBOT_A
	 	  FROM
	 	       CHATBOT
	 	 WHERE 
	 	 <choose>
	 	 	<when test='List[0].contains("[admin]")'>
	 	 		CHATBOT_Q LIKE '%' || #{List[0]} || '%'
	 	 	</when>
	 	 	<otherwise>
	 	 		<foreach collection="List" item="item" open="(" separator="AND" close=")">
		 	       CHATBOT_Q LIKE '%' || #{item} || '%'
			 	 </foreach>
			  AND
			       CHATBOT_Q NOT LIKE '[admin]%'
	 	 	</otherwise>
	 	 </choose>
	</select>
	
	<!-- 일반회원 목록 수 -->
	<select id="selectMemListCount" resultType="_int">
		SELECT
		       COUNT(*)
		  FROM
		       MEMBER
	</select>
	
	<!-- 일반회원 목록 조회 -->
	<select id="selectMemberList" resultMap="memberResultSet">
		SELECT
		       MEM_NO
		       ,MEM_ID
		       ,MEM_NAME
		       ,EMAIL
		       ,PHONE
		       ,STATUS
		       ,MEM_ENROLLDATE
		  FROM
		       MEMBER
		 ORDER
		    BY
		       (CASE WHEN STATUS='A' THEN 1 ELSE 2 END), MEM_ENROLLDATE DESC
	</select>
	
	<!-- 일반회원 정지 -->
	<update id="deleteMember" parameterType="_int">
		UPDATE
		       MEMBER
		   SET
		       STATUS = 'S'
		 WHERE
		       STATUS != 'N'
		   AND
		       MEM_NO = #{memNo}
	</update>
</mapper>